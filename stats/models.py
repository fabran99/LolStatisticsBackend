from django.db import models


class Ban(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    pickTurn = models.IntegerField(blank=False, null=False)
    division = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False, db_index=True)
    win = models.BooleanField(blank=False, null=False)
    gameId = models.BigIntegerField(blank=False, null=False)
    teamId = models.IntegerField(blank=False, null=False)
    server = models.CharField(blank=False, null=False, max_length=50)
    timestamp = models.BigIntegerField(blank=False, null=False, db_index=True)


class FirstBuy(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    role = models.IntegerField(blank=False, null=False)
    lane = models.IntegerField(blank=False, null=False)
    division = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False, db_index=True)
    item1 = models.IntegerField(blank=True, null=True)
    item1_n = models.IntegerField(blank=True, null=True)
    item2 = models.IntegerField(blank=True, null=True)
    item2_n = models.IntegerField(blank=True, null=True)
    item3 = models.IntegerField(blank=True, null=True)
    item3_n = models.IntegerField(blank=True, null=True)
    timestamp = models.BigIntegerField(blank=False, null=False, db_index=True)


class SkillUp(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    division = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False, db_index=True)
    _1 = models.IntegerField(blank=False, null=True)
    _2 = models.IntegerField(blank=False, null=True)
    _3 = models.IntegerField(blank=False, null=True)
    _4 = models.IntegerField(blank=False, null=True)
    _5 = models.IntegerField(blank=False, null=True)
    _6 = models.IntegerField(blank=False, null=True)
    _7 = models.IntegerField(blank=False, null=True)
    _8 = models.IntegerField(blank=False, null=True)
    _9 = models.IntegerField(blank=False, null=True)
    _10 = models.IntegerField(blank=False, null=True)
    _11 = models.IntegerField(blank=False, null=True)
    _12 = models.IntegerField(blank=False, null=True)
    _13 = models.IntegerField(blank=False, null=True)
    _14 = models.IntegerField(blank=False, null=True)
    _15 = models.IntegerField(blank=False, null=True)
    _16 = models.IntegerField(blank=False, null=True)
    _17 = models.IntegerField(blank=False, null=True)
    _18 = models.IntegerField(blank=False, null=True)
    timestamp = models.BigIntegerField(blank=False, null=False, db_index=True)


class Timeline(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False)
    teamId = models.IntegerField(blank=False, null=False)
    gameTimestamp = models.BigIntegerField(
        blank=False, null=False, db_index=True)
    x1 = models.IntegerField(blank=False, null=False)
    y1 = models.IntegerField(blank=False, null=False)
    x2 = models.IntegerField(blank=False, null=False)
    y2 = models.IntegerField(blank=False, null=False)
    x3 = models.IntegerField(blank=False, null=False)
    y3 = models.IntegerField(blank=False, null=False)
    x4 = models.IntegerField(blank=False, null=False)
    y4 = models.IntegerField(blank=False, null=False)


class ChampData(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    teamId = models.IntegerField(blank=False, null=False)
    division = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False, db_index=True)
    role = models.IntegerField(blank=False, null=False)
    lane = models.IntegerField(blank=False, null=False)
    win = models.BooleanField(blank=False, null=False)
    gameId = models.BigIntegerField(blank=False, null=False)
    gameDuration = models.IntegerField(blank=False, null=False)
    server = models.CharField(blank=False, null=False, max_length=50)
    timestamp = models.BigIntegerField(blank=False, null=False, db_index=True)
    spell1Id = models.IntegerField(blank=False, null=False)
    spell2Id = models.IntegerField(blank=False, null=False)
    participantId = models.IntegerField(blank=False, null=False)
    item0 = models.IntegerField(blank=False, null=False)
    item1 = models.IntegerField(blank=False, null=False)
    item2 = models.IntegerField(blank=False, null=False)
    item3 = models.IntegerField(blank=False, null=False)
    item4 = models.IntegerField(blank=False, null=False)
    item5 = models.IntegerField(blank=False, null=False)
    item6 = models.IntegerField(blank=False, null=False)
    perk0 = models.IntegerField(blank=False, null=False)
    perk1 = models.IntegerField(blank=False, null=False)
    perk2 = models.IntegerField(blank=False, null=False)
    perk3 = models.IntegerField(blank=False, null=False)
    perk4 = models.IntegerField(blank=False, null=False)
    perk5 = models.IntegerField(blank=False, null=False)
    perkPrimaryStyle = models.IntegerField(blank=False, null=False)
    perkSubStyle = models.IntegerField(blank=False, null=False)
    statPerk0 = models.IntegerField(blank=False, null=False)
    statPerk1 = models.IntegerField(blank=False, null=False)
    statPerk2 = models.IntegerField(blank=False, null=False)


class ChampPlaystyle(models.Model):
    championId = models.IntegerField(blank=False, null=False)
    teamId = models.IntegerField(blank=False, null=False)
    role = models.IntegerField(blank=False, null=False)
    lane = models.IntegerField(blank=False, null=False)
    gameDuration = models.IntegerField(blank=False, null=False)
    tier = models.IntegerField(blank=False, null=False, db_index=True)
    division = models.IntegerField(blank=False, null=False)
    gameId = models.BigIntegerField(blank=False, null=False)
    server = models.CharField(blank=False, null=False, max_length=50)
    timestamp = models.BigIntegerField(blank=False, null=False, db_index=True)
    win = models.BooleanField(blank=False, null=False)
    kills = models.IntegerField(blank=False, null=False)
    deaths = models.IntegerField(blank=False, null=False)
    assists = models.IntegerField(blank=False, null=False)
    totalDamageDealtToChampions = models.IntegerField(blank=False, null=False)
    magicDamageDealtToChampions = models.IntegerField(blank=False, null=False)
    physicalDamageDealtToChampions = models.IntegerField(
        blank=False, null=False)
    goldEarned = models.IntegerField(blank=False, null=False)
    totalMinionsKilled = models.IntegerField(blank=False, null=False)
    neutralMinionsKilled = models.IntegerField(blank=False, null=False)
    neutralMinionsKilledTeamJungle = models.IntegerField(
        blank=False, null=False)
    neutralMinionsKilledEnemyJungle = models.IntegerField(
        blank=False, null=False)
    wardsPlaced = models.IntegerField(blank=False, null=False)
    wardsKilled = models.IntegerField(blank=False, null=False)
    physicalDamageTaken = models.IntegerField(blank=False, null=False)
    damageDealtToObjectives = models.IntegerField(blank=False, null=False)
    magicalDamageTaken = models.IntegerField(blank=False, null=False)
    trueDamageTaken = models.IntegerField(blank=False, null=False)
    visionScore = models.IntegerField(blank=False, null=False)


class Player(models.Model):
    puuid = models.CharField(blank=False, null=False,
                             max_length=100, unique=True)
    accountId = models.CharField(blank=False, null=False, max_length=100)
    summonerId = models.CharField(blank=False, null=False, max_length=100)
    summonerName = models.CharField(blank=False, null=False, max_length=100)
    inactive = models.BooleanField(blank=False, null=False)
    server = models.CharField(blank=False, null=False,
                              max_length=50, db_index=True)
    tier = models.CharField(blank=False, null=False, max_length=50)
    rank = models.CharField(blank=False, null=False, max_length=50)
    last_time_searched = models.BigIntegerField(blank=True, null=True)
    zero_matches_number = models.IntegerField(blank=True, null=True)
    last_match_number = models.IntegerField(blank=True, null=True)
